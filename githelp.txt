
>git --help 
		   
The most commonly used git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

----------------------------------
>git help -a

usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

available git commands in 'C:\Program Files (x86)\Git/libexec/git-core'

  add                 get-tar-commit-id   receive-pack
  add--interactive    grep                reflog
  am                  gui                 relink
  annotate            gui--askpass        remote
  apply               gui--askyesno       remote-ext
  archive             gui.tcl             remote-fd
  bisect              hash-object         remote-ftp
  bisect--helper      help                remote-ftps
  blame               http-backend        remote-http
  branch              http-fetch          remote-https
  bundle              http-push           remote-testsvn
  cat-file            imap-send           repack
  check-attr          index-pack          replace
  check-ignore        init                request-pull
  check-mailmap       init-db             rerere
  check-ref-format    log                 reset
  checkout            ls-files            rev-list
  checkout-index      ls-remote           rev-parse
  cherry              ls-tree             revert
  cherry-pick         mailinfo            rm
  citool              mailsplit           send-email
  clean               merge               send-pack
  clone               merge-base          sh-i18n--envsubst
  column              merge-file          shortlog
  commit              merge-index         show
  commit-tree         merge-octopus       show-branch
  config              merge-one-file      show-index
  count-objects       merge-ours          show-ref
  credential          merge-recursive     stage
  credential-store    merge-resolve       stash
  credential-wincred  merge-subtree       status
  daemon              merge-tree          stripspace
  describe            mergetool           submodule
  diff                mktag               subtree
  diff-files          mktree              svn
  diff-index          mv                  symbolic-ref
  diff-tree           name-rev            tag
  difftool            notes               unpack-file
  difftool--helper    p4                  unpack-objects
  fast-export         pack-objects        update-index
  fast-import         pack-redundant      update-ref
  fetch               pack-refs           update-server-info
  fetch-pack          patch-id            upload-archive
  filter-branch       prune               upload-pack
  fmt-merge-msg       prune-packed        var
  for-each-ref        pull                verify-pack
  format-patch        push                verify-tag
  fsck                quiltimport         web--browse
  fsck-objects        read-tree           whatchanged
  gc                  rebase              write-tree

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

-----------------------------------
>git help -g

The common Git guides are:

   attributes   Defining attributes per path
   glossary     A Git glossary
   ignore       Specifies intentionally untracked files to ignore
   modules      Defining submodule properties
   revisions    Specifying revisions and ranges for Git
   tutorial     A tutorial introduction to Git (for version 1.5.1 or newer)
   workflows    An overview of recommended workflows with Git

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
		   
----------------------------------

